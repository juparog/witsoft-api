import { RequestMethod, ValidationPipe, VersioningType } from "@nestjs/common";
import { Logger } from "@nestjs/common/services";
import { NestFactory } from "@nestjs/core";
import { DocumentBuilder, SwaggerModule } from "@nestjs/swagger";
import gradient from "gradient-string";

import { AppConfigService } from "@witsoft/config/app-config/app-config.service";

import { AppModule } from "./app.module";

const logger = new Logger("main");

async function bootstrap() {
	const app = await NestFactory.create(AppModule);

	const appConfigService = app.get(AppConfigService);

	app.enableCors();
	app.enableVersioning({
		type: VersioningType.URI,
		prefix: "",
	});
	app.setGlobalPrefix(appConfigService.apiPrefix, {
		exclude: [{ path: "health", method: RequestMethod.GET }],
	});
	app.useGlobalPipes(
		new ValidationPipe({
			forbidNonWhitelisted: true,
			transform: true,
			whitelist: true,
		}),
	);

	const config = new DocumentBuilder()
		.setTitle(appConfigService.apiName)
		.setDescription(appConfigService.apiDescription)
		.setVersion(appConfigService.apiVersion)
		.build();
	const document = SwaggerModule.createDocument(app, config);
	SwaggerModule.setup(appConfigService.apiPrefix, app, document);

	const HOST = appConfigService.host;
	const PORT = appConfigService.port;
	await app.listen(PORT, HOST, () => {
		logLogo();
		logger.log(`Listening at http://${HOST}:${PORT}`);
		logger.log("");
	});
}

function logLogo() {
	const logo = {
		generatedBy:
			"Generated by: http://patorjk.com/software/taag/#p=display&h=1&f=Sombra%20ANSI&t=Witsoft",
		lines: [
			"",
			"██╗    ██╗██╗████████╗███████╗ ██████╗ ███████╗████████╗",
			"██║    ██║██║╚══██╔══╝██╔════╝██╔═══██╗██╔════╝╚══██╔══╝",
			"██║ █╗ ██║██║   ██║   ███████╗██║   ██║█████╗     ██║",
			"██║███╗██║██║   ██║   ╚════██║██║   ██║██╔══╝     ██║",
			"╚███╔███╔╝██║   ██║   ███████║╚██████╔╝██║        ██║",
			` ╚══╝╚══╝ ╚═╝   ╚═╝   ╚══════╝ ╚═════╝ ╚═╝        ╚═╝ v.${process.env.npm_package_version}`,
			"",
		],
	};
	logo.lines.forEach((line) => logger.log(gradient.passion(line)));
}

bootstrap();
